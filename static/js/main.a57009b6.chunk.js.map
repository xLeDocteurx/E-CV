{"version":3,"sources":["reducers/sessionReducer.js","reducers/sectionsReducer.js","reducers/skillsReducer.js","reducers/projectsReducer.js","reducers/experiencesReducer.js","reducers/technosReducer.js","reducers/index.js","components/MainHeaders/MainHeader.js","actions/sessionActions.js","api/sections.js","api/skills.js","api/projects.js","api/experiences.js","api/technos.js","actions/sectionsActions.js","actions/skillsActions.js","actions/projectsActions.js","actions/experiencesActions.js","actions/technosActions.js","containers/Home.js","components/SubHeaders/ProjectHeader.js","containers/Project.js","containers/Portfolio.js","containers/_404.js","Router.js","serviceWorker.js","index.js"],"names":["sessionInitialState","pageTitle","initialState","isLoading","error","sections","skillsInitialState","skills","selectedSkillInitialState","skill","projectsInitialState","projects","selectedProjectInitialState","project","from","experiencesInitialState","experiences","selectedExperienceInitialState","experience","technosInitialState","technos","selectedTechnoInitialState","techno","model","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","response","data","statusCode","message","session","section","name","selectedSkill","selectedProject","selectedExperience","selectedTechno","MainHeader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectTo","bind","assertThisInitialized","path","history","push","concat","_this2","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","IconButton_default","className","menuButton","color","aria-label","title","Menu_default","Typography_default","variant","grow","Button_default","onClick","Component","connectedMainHeader","connect","MainHeaderWithStyle","withStyles","root","flexGrow","marginRight","withRouter","sessionActions","setPageTitle","dispatch","getState","API_BASE_URL","runtimeEnv","REACT_APP_API_BASE_URL","client","axios","create","baseURL","headers","Content-Type","Authorization","sectionsApi","getAll","get","getOne","skillsApi","id","projectsApi","experiencesApi","technosApi","sectionsActions","api","then","resp","catch","err","invalidateEntities","skillsActions","projectsActions","callback","console","log","experiencesActions","technosActions","Home","fade","document","REACT_APP_APP_NAME","getSections","setState","LinearProgress_default","w100","array","sort","b","Date","createdAt","firstYear","JSON","stringify","Grid_default","item","xs","bandeau","Avatar_default","alt","src","bigAvatar","map","skill_index","key","description","techno_index","sortByFirstYear","experience_index","lastYear","container","renderLoading","renderBandeau","renderSkills","renderTechnos","renderExperiences","connectedHome","theme","_bigAvatar","width","backgroundColor","palette","background","paper","marginTop","marginLeft","textAlign","defineProperty","breakpoints","down","height","up","ProjectHeader","goBack","animState","visibility","getVisibility","Fade_default","in","mountOnEnter","unmountOnExit","NavigateBefore_default","ProjectHeaderWithStyle","Project","animDuration","expanded","setExpended","match","params","slug","getProjectCallback","setTimeout","overflow","transition","transitionProperty","zIndex","entering","top","right","bottom","left","entered","relative","exiting","opacity","_this3","defaultStyle","getDefaultStyle","transitionStyles","getTransitionStyles","_this$state","style","SubHeaders_ProjectHeader","Card_default","card","CardMedia_default","media","image","CardHeader_default","avatar","MoreVert_default","subheader","CardContent_default","component","CardActions_default","Favorite_default","Share_default","clsx","expand","expandOpen","handleExpandClick","aria-expanded","ExpandMore_default","Collapse_default","timeout","paragraph","extendedDesciption","connectedProject","ProjectWithStyles","paddingTop","transform","transitions","duration","shortest","red","Portfolio","selectedProjectId","getAllCallback","e","_target$getBoundingCl","target","getBoundingClientRect","pathname","to","_this4","gridList","sortedProjects","project_index","_id","sm","md","lg","CardActionArea_default","getProject","gutterBottom","renderProjects","connectedPortfolio","PortfolioWithStyle","centeredCircularProgress","icon","_404","MainHeaders_MainHeader","location","createBrowserHistory","mapStyles","styles","scale","bounce","val","spring","stiffness","damping","Router","nextProps","previousView","react_router_dom","react_router_transition_es","atEnter","atLeave","atActive","react_router","exact","render","containers_Home","containers_Portfolio","_ref","containers_404","_ref2","containers_Project","Boolean","window","hostname","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_Router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a57009b6.chunk.js","sourcesContent":["export const sessionInitialState = {\n    pageTitle: null,\n}\n\nexport function session(state = sessionInitialState, action) {\n    switch (action.type) {\n        case 'SESSION_SET_PAGE_TITLE':\n            return {\n                ...state,\n                pageTitle: action.payload.pageTitle,\n            }\n\n        default:\n            return state\n    }\n}","// import {sectionsActions} from '../actions'\n\nexport const initialState = {\n    isLoading: null,\n    error: null,\n\n    sections: {},\n}\n\nexport function sections(state = initialState, action) {\n    switch (action.type) {\n        case 'SECTIONS_FETCH_ALL_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'SECTIONS_FETCH_ALL_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                sections: action.payload.sections,\n            }\n        case 'SECTIONS_FETCH_ALL_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'SECTIONS_FETCH_ONE_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'SECTIONS_FETCH_ONE_SUCCEEDED':\n            let sections = state.sections\n            sections[action.payload.section.name] = action.payload.section\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                sections: sections,\n            }\n        case 'SECTIONS_FETCH_ONE_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n                // error: action.payload.error, \n            }\n        case 'SECTIONS_INVALIDATE_ENTITIES':\n            return initialState\n        case 'SECTIONS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}","// import {skillsActions} from '../actions'\n\nexport const skillsInitialState = {\n    isLoading: null,\n    error: null,\n\n    skills: null,\n}\n\nexport const selectedSkillInitialState = {\n    isLoading: null,\n    error: null,\n\n    skill: null,\n}\n\nexport function skills(state = skillsInitialState, action) {\n    switch (action.type) {\n        case 'SKILLS_FETCH_ALL_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'SKILLS_FETCH_ALL_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                skills: action.payload.skills,\n            }\n        case 'SKILLS_FETCH_ALL_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'SKILLS_INVALIDATE_ENTITIES':\n            return skillsInitialState\n        case 'SKILLS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}\n\nexport function selectedSkill(state = selectedSkillInitialState, action) {\n    switch (action.type) {\n        case 'SKILLS_FETCH_ONE_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'SKILLS_FETCH_ONE_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                skill: action.payload.skill,\n            }\n        case 'SKILLS_FETCH_ONE_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'SKILLS_INVALIDATE_ENTITIES':\n            return skillsInitialState\n        case 'SKILLS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}","// import {projectsActions} from '../actions'\n\nexport const projectsInitialState = {\n    isLoading: null,\n    error: null,\n\n    projects: null,\n}\n\nexport const selectedProjectInitialState = {\n    isLoading: null,\n    error: null,\n\n    project: null,\n    from: null,\n}\n\nexport function projects(state = projectsInitialState, action) {\n    switch (action.type) {\n        case 'PROJECTS_FETCH_ALL_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'PROJECTS_FETCH_ALL_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                projects: action.payload.projects,\n            }\n        case 'PROJECTS_FETCH_ALL_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'PROJECTS_INVALIDATE_ENTITIES':\n            return projectsInitialState\n        case 'PROJECTS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}\n\nexport function selectedProject(state = selectedProjectInitialState, action) {\n    switch (action.type) {\n        case 'PROJECTS_FETCH_ONE_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'PROJECTS_FETCH_ONE_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                project: action.payload.project,\n                from: action.payload.from ? action.payload.from : null,\n            }\n        case 'PROJECTS_FETCH_ONE_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'PROJECTS_INVALIDATE_ENTITIES':\n            return projectsInitialState\n        case 'PROJECTS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}","// import {experiencesActions} from '../actions'\n\nexport const experiencesInitialState = {\n    isLoading: null,\n    error: null,\n\n    experiences: null,\n}\n\nexport const selectedExperienceInitialState = {\n    isLoading: null,\n    error: null,\n\n    experience: null,\n}\n\nexport function experiences(state = experiencesInitialState, action) {\n    switch (action.type) {\n        case 'EXPERIENCES_FETCH_ALL_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'EXPERIENCES_FETCH_ALL_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                experiences: action.payload.experiences,\n            }\n        case 'EXPERIENCES_FETCH_ALL_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'EXPERIENCES_INVALIDATE_ENTITIES':\n            return experiencesInitialState\n        case 'EXPERIENCES_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}\n\nexport function selectedExperience(state = selectedExperienceInitialState, action) {\n    switch (action.type) {\n        case 'EXPERIENCES_FETCH_ONE_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'EXPERIENCES_FETCH_ONE_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                experience: action.payload.experience,\n            }\n        case 'EXPERIENCES_FETCH_ONE_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'EXPERIENCES_INVALIDATE_ENTITIES':\n            return experiencesInitialState\n        case 'EXPERIENCES_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}","// import {technosActions} from '../actions'\n\nexport const technosInitialState = {\n    isLoading: null,\n    error: null,\n\n    technos: null,\n}\n\nexport const selectedTechnoInitialState = {\n    isLoading: null,\n    error: null,\n\n    techno: null,\n}\n\nexport function technos(state = technosInitialState, action) {\n    switch (action.type) {\n        case 'TECHNOS_FETCH_ALL_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'TECHNOS_FETCH_ALL_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                technos: action.payload.technos,\n            }\n        case 'TECHNOS_FETCH_ALL_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'TECHNOS_INVALIDATE_ENTITIES':\n            return technosInitialState\n        case 'TECHNOS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}\n\nexport function selectedTechno(state = selectedTechnoInitialState, action) {\n    switch (action.type) {\n        case 'TECHNOS_FETCH_ONE_STARTED':\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case 'TECHNOS_FETCH_ONE_SUCCEEDED':\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n\n                techno: action.payload.techno,\n            }\n        case 'TECHNOS_FETCH_ONE_FAILED':\n            return {\n                ...state,\n                isLoading: false,\n                \n                error: action.payload.error.response.data.statusCode + \" : \" + action.payload.error.response.data.message, \n            }\n        case 'TECHNOS_INVALIDATE_ENTITIES':\n            return technosInitialState\n        case 'TECHNOS_INVALIDATE_FETCH':\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\n\nimport {session} from './sessionReducer'\n\nimport {sections} from './sectionsReducer'\nimport {skills, selectedSkill} from './skillsReducer'\nimport {projects, selectedProject} from './projectsReducer'\nimport {experiences, selectedExperience} from './experiencesReducer'\nimport {technos, selectedTechno} from './technosReducer'\n\nlet model = combineReducers({\n    skills,\n    projects,\n    experiences,\n    technos,\n})\n\nexport default combineReducers({\n    model,\n    \n    session,\n\n    sections,\n    selectedSkill,\n    selectedProject,\n    selectedExperience,\n    selectedTechno,\n})","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withStyles} from '@material-ui/core/styles'\nimport {withRouter} from 'react-router-dom'\n\n// import {Link} from 'react-router-dom'\n\n// import M from \"materialize-css\"\n// import {AccessAlarm, ThreeDRotation} from '@material-ui/icons'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport MenuIcon from '@material-ui/icons/Menu'\n// import Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass MainHeader extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            \n        }\n\n        this.redirectTo = this.redirectTo.bind(this)\n    }\n\n    componentDidMount() {\n\n    }\n\n    redirectTo(path) {\n        this.props.history.push(`${path}`)\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <AppBar position=\"static\" /*color=\"default\"*/>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" title=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    {/* <AccessAlarm /> */}\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        {this.props.session.pageTitle ? this.props.session.pageTitle : \"\"}\n                    </Typography>\n                    {/* <Button color=\"inherit\">Login</Button> */}\n\n                    <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/')} title=\"Home\">Home</Button>\n                    <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/portfolio')} title=\"Portfolio\">Portfolio</Button>\n                    {/* <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/contact')} title=\"Contact\">Contact</Button> */}\n                </Toolbar>\n\n            </AppBar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        session: state.session,\n    }\n}\n\nconst connectedMainHeader = connect(mapStateToProps)(MainHeader)\nconst MainHeaderWithStyle = withStyles(styles)(connectedMainHeader)\nexport default withRouter(MainHeaderWithStyle)","export const sessionActions = {\n    setPageTitle,\n}\n\nfunction setPageTitle(pageTitle) {\n    return (dispatch, getState) => {\n        dispatch({type:'SESSION_SET_PAGE_TITLE', payload: {pageTitle: pageTitle}})\n    }\n}","import axios from 'axios'\n\n// import {sessionService} from 'redux-react-session'\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nconst API_BASE_URL = runtimeEnv().REACT_APP_API_BASE_URL\n\nconst client = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        Authorization: ''\n    }\n})\n\n// client.interceptors.request.use(async function (config) {\n//     // try{\n// \t//     const jwt = await sessionService.loadUser()\n// \t//     if(jwt)\n// \t//         config.headers.Authorization = 'Bearer ' + jwt.jwt\n//   \t// }catch(e){\n//   \t// \treturn config\n//   \t// }\n//     return config\n// }, function (error) {\n// \t\treturn Promise.reject(error)\n// })\n\nexport const sectionsApi = {\n    getAll,\n    getOne,\n}\n\nfunction getAll() {\n    return client.get(`/sections`)\n}\n\nfunction getOne(name) {\n    return client.get(`/sections/${name}`)\n}","import axios from 'axios'\n\n// import {sessionService} from 'redux-react-session'\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nconst API_BASE_URL = runtimeEnv().REACT_APP_API_BASE_URL\n\nconst client = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        Authorization: ''\n    }\n})\n\n// client.interceptors.request.use(async function (config) {\n//     // try{\n// \t//     const jwt = await sessionService.loadUser()\n// \t//     if(jwt)\n// \t//         config.headers.Authorization = 'Bearer ' + jwt.jwt\n//   \t// }catch(e){\n//   \t// \treturn config\n//   \t// }\n//     return config\n// }, function (error) {\n// \t\treturn Promise.reject(error)\n// })\n\nexport const skillsApi = {\n    getAll,\n    getOne,\n}\n\nfunction getAll() {\n    return client.get(`/skills`)\n}\n\nfunction getOne(id) {\n    return client.get(`/skills/${id}`)\n}","import axios from 'axios'\n\n// import {sessionService} from 'redux-react-session'\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nconst API_BASE_URL = runtimeEnv().REACT_APP_API_BASE_URL\n\nconst client = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        Authorization: ''\n    }\n})\n\n// client.interceptors.request.use(async function (config) {\n//     // try{\n// \t//     const jwt = await sessionService.loadUser()\n// \t//     if(jwt)\n// \t//         config.headers.Authorization = 'Bearer ' + jwt.jwt\n//   \t// }catch(e){\n//   \t// \treturn config\n//   \t// }\n//     return config\n// }, function (error) {\n// \t\treturn Promise.reject(error)\n// })\n\nexport const projectsApi = {\n    getAll,\n    getOne,\n}\n\nfunction getAll() {\n    return client.get(`/projects`)\n}\n\nfunction getOne(name) {\n    return client.get(`/projects/${name}`)\n}","import axios from 'axios'\n\n// import {sessionService} from 'redux-react-session'\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nconst API_BASE_URL = runtimeEnv().REACT_APP_API_BASE_URL\n\nconst client = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        Authorization: ''\n    }\n})\n\n// client.interceptors.request.use(async function (config) {\n//     // try{\n// \t//     const jwt = await sessionService.loadUser()\n// \t//     if(jwt)\n// \t//         config.headers.Authorization = 'Bearer ' + jwt.jwt\n//   \t// }catch(e){\n//   \t// \treturn config\n//   \t// }\n//     return config\n// }, function (error) {\n// \t\treturn Promise.reject(error)\n// })\n\nexport const experiencesApi = {\n    getAll,\n    getOne,\n}\n\nfunction getAll() {\n    return client.get(`/experiences`)\n}\n\nfunction getOne(id) {\n    return client.get(`/experiences/${id}`)\n}","import axios from 'axios'\n\n// import {sessionService} from 'redux-react-session'\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nconst API_BASE_URL = runtimeEnv().REACT_APP_API_BASE_URL\n\nconst client = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        Authorization: ''\n    }\n})\n\n// client.interceptors.request.use(async function (config) {\n//     // try{\n// \t//     const jwt = await sessionService.loadUser()\n// \t//     if(jwt)\n// \t//         config.headers.Authorization = 'Bearer ' + jwt.jwt\n//   \t// }catch(e){\n//   \t// \treturn config\n//   \t// }\n//     return config\n// }, function (error) {\n// \t\treturn Promise.reject(error)\n// })\n\nexport const technosApi = {\n    getAll,\n    getOne,\n}\n\nfunction getAll() {\n    return client.get(`/technologies`)\n}\n\nfunction getOne(id) {\n    return client.get(`/technologies/${id}`)\n}","import * as api from '../api'\n// import {sectionsReducer} from '../reducers'\n\nexport const sectionsActions = {\n    getAll,\n    getOne,\n    invalidateEntities,\n}\n\nfunction getAll() {\n    return (dispatch, getState) => {\n        dispatch({type:'SECTIONS_FETCH_ALL_STARTED'})\n        api.sectionsApi.getAll()\n        .then(resp => {\n            dispatch({type:'SECTIONS_FETCH_ALL_SUCCEEDED', payload:{sections: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'SECTIONS_FETCH_ALL_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction getOne(name) {\n    return (dispatch, getState) => {\n        dispatch({type:'SECTIONS_FETCH_ONE_STARTED'})\n        api.sectionsApi.getOne(name)\n        .then(resp => {\n            dispatch({type:'SECTIONS_FETCH_ONE_SUCCEEDED', payload:{section: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'SECTIONS_FETCH_ONE_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction invalidateEntities() {\n    return (dispatch, getState) => {\n        dispatch({type:'SECTIONS_INVALIDATE_ENTITIES'})\n    }\n}","import * as api from '../api'\n// import {skillsReducer} from '../reducers'\n\nexport const skillsActions = {\n    getAll,\n    getOne,\n    invalidateEntities,\n}\n\nfunction getAll() {\n    return (dispatch, getState) => {\n        dispatch({type:'SKILLS_FETCH_ALL_STARTED'})\n        api.skillsApi.getAll()\n        .then(resp => {\n            dispatch({type:'SKILLS_FETCH_ALL_SUCCEEDED', payload:{skills: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'SKILLS_FETCH_ALL_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction getOne(id) {\n    return (dispatch, getState) => {\n        dispatch({type:'SKILLS_FETCH_ONE_STARTED'})\n        api.skillsApi.getOne(id)\n        .then(resp => {\n            dispatch({type:'SKILLS_FETCH_ONE_SUCCEEDED', payload:{skill: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'SKILLS_FETCH_ONE_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction invalidateEntities() {\n    return (dispatch, getState) => {\n        dispatch({type:'SKILLS_INVALIDATE_ENTITIES'})\n    }\n}","import * as api from '../api'\n// import {projectsReducer} from '../reducers'\n\nexport const projectsActions = {\n    getAll,\n    getOne,\n    invalidateEntities,\n}\n\nfunction getAll(callback) {\n    return (dispatch, getState) => {\n        dispatch({type:'PROJECTS_FETCH_ALL_STARTED'})\n        api.projectsApi.getAll()\n        .then(resp => {\n            dispatch({type:'PROJECTS_FETCH_ALL_SUCCEEDED', payload:{projects: resp.data}})\n            if(callback) {callback()}\n        })\n        .catch(err => {\n            dispatch({type:'PROJECTS_FETCH_ALL_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction getOne(name, callback, from) {\n    return (dispatch, getState) => {\n        dispatch({type:'PROJECTS_FETCH_ONE_STARTED'})\n        api.projectsApi.getOne(name)\n        .then(resp => {\n\n            dispatch({type:'PROJECTS_FETCH_ONE_SUCCEEDED', payload:{project: resp.data, from: from}})\n            if(callback) {callback()}\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch({type:'PROJECTS_FETCH_ONE_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction invalidateEntities() {\n    return (dispatch, getState) => {\n        dispatch({type:'PROJECTS_INVALIDATE_ENTITIES'})\n    }\n}","import * as api from '../api'\n// import {experiencesReducer} from '../reducers'\n\nexport const experiencesActions = {\n    getAll,\n    getOne,\n    invalidateEntities,\n}\n\nfunction getAll() {\n    return (dispatch, getState) => {\n        dispatch({type:'EXPERIENCES_FETCH_ALL_STARTED'})\n        api.experiencesApi.getAll()\n        .then(resp => {\n            dispatch({type:'EXPERIENCES_FETCH_ALL_SUCCEEDED', payload:{experiences: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'EXPERIENCES_FETCH_ALL_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction getOne(id) {\n    return (dispatch, getState) => {\n        dispatch({type:'EXPERIENCES_FETCH_ONE_STARTED'})\n        api.experiencesApi.getOne(id)\n        .then(resp => {\n            dispatch({type:'EXPERIENCES_FETCH_ONE_SUCCEEDED', payload:{experience: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'EXPERIENCES_FETCH_ONE_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction invalidateEntities() {\n    return (dispatch, getState) => {\n        dispatch({type:'EXPERIENCES_INVALIDATE_ENTITIES'})\n    }\n}","import * as api from '../api'\n// import {technosReducer} from '../reducers'\n\nexport const technosActions = {\n    getAll,\n    getOne,\n    invalidateEntities,\n}\n\nfunction getAll() {\n    return (dispatch, getState) => {\n        dispatch({type:'TECHNOS_FETCH_ALL_STARTED'})\n        api.technosApi.getAll()\n        .then(resp => {\n            dispatch({type:'TECHNOS_FETCH_ALL_SUCCEEDED', payload:{technos: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'TECHNOS_FETCH_ALL_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction getOne(id) {\n    return (dispatch, getState) => {\n        dispatch({type:'TECHNOS_FETCH_ONE_STARTED'})\n        api.technosApi.getOne(id)\n        .then(resp => {\n            dispatch({type:'TECHNOS_FETCH_ONE_SUCCEEDED', payload:{techno: resp.data}})\n        })\n        .catch(err => {\n            dispatch({type:'TECHNOS_FETCH_ONE_FAILED', payload:{error: err}})\n        })\n    }\n}\n\nfunction invalidateEntities() {\n    return (dispatch, getState) => {\n        dispatch({type:'TECHNOS_INVALIDATE_ENTITIES'})\n    }\n}","import runtimeEnv from '@mars/heroku-js-runtime-env'\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withStyles} from '@material-ui/core'\n\nimport Slide from '@material-ui/core/Slide'\nimport Fade from '@material-ui/core/Fade'\n// import Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Avatar from '@material-ui/core/Avatar'\n// import {withRouter} from 'react-router-dom'\n\nimport MainHeader from '../components/MainHeaders/MainHeader'\n// import MainHeaderProminent from '../components/MainHeaders/MainHeaderProminent'\n\nimport {sessionActions, sectionsActions, skillsActions, experiencesActions, technosActions} from '../actions'\n\n// import {skillsApi} from '../api'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        // flexGrow: 1,\n        // height: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    w100: {\n        width: '100%',\n    },\n    menuButton: {\n        marginRight: 20,\n    },\n    bandeau: {\n        // minHeight: 300,\n        // height: '100%',\n        marginTop: 10,\n        marginLeft: 10,\n        textAlign: 'center',\n    },\n    bigAvatar: {\n        // margin: 10,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        [theme.breakpoints.down('sm')]: {\n            width: 150,\n            height: 150,\n        },\n        [theme.breakpoints.up('md')]: {\n            width: 175,\n            height: 175,\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: 200,\n            height: 200,\n        },\n    },\n})\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            pageTitle:\"Home\",\n            fade: true,\n        }\n    }\n    \n\tcomponentDidMount() {\n        this.props.dispatch(sessionActions.setPageTitle(this.state.pageTitle))\n        document.title = `${runtimeEnv().REACT_APP_APP_NAME} - ${this.state.pageTitle}`\n\n        this.getSections()\n        \n        this.props.dispatch(skillsActions.getAll())\n        this.props.dispatch(technosActions.getAll())\n        this.props.dispatch(experiencesActions.getAll())\n    }\n    \n    componentWillUnmount() {\n        this.setState({fade: false})\n    }\n\n    renderLoading() {\n        if(\n            this.props.sections.isLoading ||\n            this.props.skills.isLoading ||\n            this.props.selectedSkill.isLoading\n        ) {\n            return <LinearProgress className={this.props.classes.w100} />\n        }\n    }\n\n    getSections() {\n        // this.props.dispatch(sectionsActions.getOne('citation'))\n    }\n\n    sortByCreatedAt(array) {\n        return array.sort((a, b) => {\n            a = new Date(a.createdAt)\n            b = new Date(b.createdAt)\n            // return a>b ? -1 : a<b ? 1 : 0\n            return b - a\n        })\n    }\n\n    sortByFirstYear(array) {\n        return array.sort((a, b) => {\n            a = new Date(a.firstYear)\n            b = new Date(b.firstYear)\n            // return a>b ? -1 : a<b ? 1 : 0\n            return b - a\n        })\n    }\n\n    renderBandeau() {\n        if(this.props.sections.error) { return JSON.stringify(this.props.sections.error) }\n\n        return (\n            <Grid item xs={12} /*direction=\"column\" justify=\"center\" alignItems=\"center\"*/ className={this.props.classes.bandeau}>\n                <Avatar alt=\"Photo\" src=\"./img/avatar.jpg\" className={this.props.classes.bigAvatar} title=\"Ma photo\" />\n                <div>\n                    \"Il ne faut jamais baisser les bras. sauf si c'est dans la chorégraphie!\"<br/>\n                    - Moi\n                </div>\n            </Grid>\n        )\n\n\n    }\n\n    renderSkills() {\n        if(this.props.skills.error) { return JSON.stringify(this.props.skills.error) }\n\n        /*if(this.props.skills.isLoading) {\n            return (\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={this.props.classes.bandeau}>\n                    <CircularProgress />\n                </Grid>\n            )\n        } else */if(this.props.skills.skills) {\n            return (\n                <Grid item xs={12}>\n                    <h1>Compétences</h1>\n                    {/* JSON.stringify(this.props.skills.skills) */}\n                    {this.props.skills.skills.map((skill, skill_index) => (\n                        <div key={skill_index}>\n                            {skill.name}\n                            <p>\n                                {skill.description}\n                            </p>\n                        </div>\n                    ))}\n                </Grid>\n            )\n        } else {\n            return 'WTF'\n        }\n    }\n\n    renderTechnos() {\n        if(this.props.technos.error) { return JSON.stringify(this.props.technos.error) }\n\n        /*if(this.props.technos.isLoading) {\n            return (\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={this.props.classes.bandeau}>\n                    <CircularProgress />\n                </Grid>\n            )\n        } else */if(this.props.technos.technos) {\n            return (\n                <Grid item xs={12}>\n                    <h1>Technologies</h1>\n                    {this.props.technos.technos.map((techno, techno_index) => (\n                        <span key={techno_index}>\n                            {techno.name}\n                            {/* <p>\n                                {techno.description}\n                            </p> */}\n                        </span>\n                    ))}\n                </Grid>\n            )\n        } else {\n            return 'WTF'\n        }\n    }\n\n    renderExperiences() {\n        \n        if(this.props.experiences.error) { return JSON.stringify(this.props.experiences.error) }\n\n        /*if(this.props.experiences.isLoading) {\n            return (\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={this.props.classes.bandeau}>\n                    <CircularProgress />\n                </Grid>\n            )\n        } else */if(this.props.experiences.experiences) {\n            return (\n                <Grid item xs={12}>\n                    <h1>Expériences</h1>\n                    <div className=\"timeline\">\n                        <ul>\n                            {this.sortByFirstYear(this.props.experiences.experiences).map((experience, experience_index) => {\n                                const {color, name, title, description, firstYear, lastYear} = experience\n                                return (\n                                    <li key={experience_index}>\n                                        <div className={`bullet contour_${color}`}></div>\n                                        {/* <div className=\"time\">5pm</div> */}\n                                        <div className=\"time\">{lastYear ? `${firstYear} - ${lastYear}` : firstYear}</div>\n                                        <div className=\"desc\">\n                                            <h3>{name}</h3>\n                                            <h4>{title}</h4>\n                                            <div className=\"people\">\n                                                {description}\n                                                {/* Pour les badges de technos ? */}\n                                                {/* <img src=\"https://s3.amazonaws.com/uifaces/faces/twitter/ashleyford/128.jpg\" alt=\"\" />\n                                                <img src=\"https://s3.amazonaws.com/uifaces/faces/twitter/kfriedson/128.jpg\" alt=\"\" />\n                                                <img src=\"https://s3.amazonaws.com/uifaces/faces/twitter/mattsince87/128.jpg\" alt=\"\" /> */}\n                                            </div>\n                                        </div>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                </Grid>\n            )\n        } else {\n            return 'WTF'\n        }\n\n    }\n\n    render() {\n\n        return (\n            <Grid container /*direction=\"column\" justify=\"center\" alignItems=\"center\"*/>\n                {this.renderLoading()}\n\n                {this.renderBandeau()}\n\n                {this.renderSkills()}\n                {this.renderTechnos()}\n                {this.renderExperiences()}\n\n            </Grid>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        sections: state.sections,\n        skills: state.model.skills,\n        selectedSkill: state.selectedSkill,\n        experiences: state.model.experiences,\n        technos: state.model.technos,\n    }\n}\n\nconst connectedHome = connect(mapStateToProps)(Home)\nexport default withStyles(styles)(connectedHome)","import React, {Component} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport {withRouter} from 'react-router-dom'\n\n// import {Link} from 'react-router-dom'\n\n// import M from \"materialize-css\"\n// import {AccessAlarm, ThreeDRotation} from '@material-ui/icons'\n\nimport Fade from '@material-ui/core/Fade';\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport NavigateBefore from '@material-ui/icons/NavigateBefore'\n// import Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n    root: {\n        // flexGrow: 1,\n        // zIndex: 1400,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass ProjectHeader extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            \n        }\n\n        this.redirectTo = this.redirectTo.bind(this)\n    }\n\n    componentDidMount() {\n\n    }\n\n    redirectTo(path) {\n        this.props.history.push(`${path}`)\n    }\n\n    goBack() {\n        this.props.history.goBack()\n    }\n\n    getVisibility() {\n        return this.props.animState == \"entered\" ? null : {visibility: 'hidden'}\n    }\n\n    render() {\n        const { classes } = this.props\n        const visibility = this.getVisibility()\n\n        return (\n            <Fade in={true} mountOnEnter unmountOnExit>\n                <AppBar position=\"fixed\" color=\"default\" /*style={{...classes.root, ...visibility}}*/>\n                    <Toolbar>\n                        <IconButton onClick={() => this.redirectTo('/portfolio')} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" title=\"Menu\">\n                            <NavigateBefore />\n                        </IconButton>\n                        {/* <AccessAlarm /> */}\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            {this.props.pageTitle ? this.props.pageTitle : \"\"}\n                        </Typography>\n                        {/* <Button color=\"inherit\">Login</Button> */}\n    \n                        {/* <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/')} title=\"Home\">Home</Button> */}\n                        {/* <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/portfolio')} title=\"Portfolio\">Portfolio</Button> */}\n                        {/* <Button className={classes.menuButton} color=\"inherit\" onClick={() => this.redirectTo('/contact')} title=\"Contact\">Contact</Button> */}\n                    </Toolbar>\n                </AppBar>\n            </Fade>\n        )\n    }\n}\n\nexport const ProjectHeaderWithStyle = withStyles(styles)(ProjectHeader)\nexport default withRouter(ProjectHeaderWithStyle)","import runtimeEnv from '@mars/heroku-js-runtime-env'\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withStyles} from '@material-ui/core'\nimport classnames from 'classnames'\nimport {withRouter} from 'react-router-dom'\n\n// import {Transition, TransitionGroup, CSSTransition} from 'react-transition-group'\n\nimport Slide from '@material-ui/core/Slide'\nimport Fade from '@material-ui/core/Fade'\nimport Zoom from '@material-ui/core/Zoom'\nimport Grid from '@material-ui/core/Grid'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport clsx from 'clsx'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\n\nimport red from '@material-ui/core/colors/red'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport ShareIcon from '@material-ui/icons/Share'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n\nimport ProjectHeader from '../components/SubHeaders/ProjectHeader'\n// import ProjectHeaderProminent from '../ProjectHeader/ProjectHeaderProminent'\n\nimport {sectionsActions, projectsActions} from '../actions'\nimport { relative } from 'path';\n\n// import {projectsApi} from '../api'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        // flexGrow: 1,\n        // height: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    w100: {\n        width: '100%',\n    },\n    menuButton: {\n        marginRight: 20,\n    },\n    bandeau: {\n        // minHeight: 300,\n        // height: '100%',\n    },\n\n    card: {\n        // maxWidth: 345,\n        // width: '75%',\n        // marginLeft: 'auto',\n        // marginRight: 'auto',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n})\n\nclass Project extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            pageTitle:'Project',\n            animState: 'default',\n            // animDuration: 1200,\n            animDuration: 300,\n            expanded: true,\n            setExpended: false,\n        }\n\n        // this.timer = null\n    }\n\n    componentDidMount() {\n        if(this.props.selectedProject.project) {\n            // document.title = `${runtimeEnv().REACT_APP_APP_NAME} - ${this.state.pageTitle} : ${this.props.match.params.name}`\n        } else {\n            this.props.dispatch(projectsActions.getOne(this.props.match.params.slug, () => this.getProjectCallback()))\n        }\n        console.log('dum...')\n        this.setState({animState: 'entering'})\n\t\t// setTimeout(() => {this.setState({animState: 'entering'})}, this.state.animDuration)\n        // this.setState({animState: 'entered'})\n\t\tsetTimeout(() => {console.log('taddaaaaah')}, this.state.animDuration)\n\t\tsetTimeout(() => {this.setState({animState: 'entered'})}, this.state.animDuration)\n    }\n\n    componentDidUpdate() {\n        document.title = `${runtimeEnv().REACT_APP_APP_NAME} - ${this.state.pageTitle} - ${this.props.selectedProject.project ? this.props.selectedProject.project.name : 'Loading ...'}`\n    }\n\n    componentWillUnmount() {\n        this.setState({animState: 'exiting'})\n    }\n\n    // redirectTo(path) {\n    //     this.props.history.push(`${path}`)\n    // }\n\n    renderLoading() {\n        if(\n            this.props.sections.isLoading ||\n            this.props.selectedProject.isLoading\n        ) {\n            return <LinearProgress className={this.props.classes.w100} />\n        }\n    }\n\n    getProjectCallback() {\n        // this.redirectTo('/_404')\n    }\n\n    getDefaultStyle(from) {\n        // console.log(\"from : \", from)\n        return {\n            overflow: 'auto',\n\n            transition: `all ${this.state.animDuration}ms ease-in-out`,\n\n            transitionProperty: `border, top, right, bottom, left, height, width`,\n            // transitionDuration: this.state.animDuration,\n            // transitionDelay: 2s,\n\n            ...from,\n            \n            position: 'fixed',\n            // position: 'absolute',\n            \n            zIndex: 1200,\n            background: 'white',\n\n            // border: '5px blue solid',\n            \n            // /* add opacity to see if the other view is actually kept below */\n            // opacity: 0.75,\n        }\n    }\n\n    getTransitionStyles() {\n        return {\n            entering: {\n                // border: '5px yellow solid',\n\n                top: 0,\n                right: 0,\n                bottom: 0,\n                // bottom: -25,\n                left: 0,\n                height: '100vh',\n                width: '100vw',\n            },\n            entered:  {\n                position: relative,\n                // border: '5px green solid',\n\n                top: 0,\n                right: 0,\n                bottom: 0,\n                // bottom: -25,\n                left: 0,\n                height: '100vh',\n                width: '100vw',\n            },\n            exiting:  {\n                // border: '5px red solid',\n\n                opacity: 0,\n            },\n            // exited:  {\n            //     // opacity: 0 \n            //     },\n        }\n    }\n    \n    handleExpandClick() {\n        this.setState({expanded: !this.state.expanded})\n    }\n\n    render() {\n        // const {classes} = this.props\n\n        // const from = this.props.location.state && this.props.location.state.from ? this.props.location.state.from : {display: 'block'}\n        const from = /*this.props.selectedProject.from &&*/ this.props.selectedProject.from ? this.props.selectedProject.from : {}\n        const defaultStyle = this.getDefaultStyle(from)\n        const transitionStyles = this.getTransitionStyles()\n        const animState = this.state.animState\n\n        // console.log('{...defaultStyle, ...transitionStyles[' + animState + ']} : ', {...defaultStyle, ...transitionStyles[animState]})\n        \n        const {expanded, setExpended} = this.state\n\n        const project = this.props.selectedProject.project ? this.props.selectedProject.project : null\n\n        return (\n\n        <div style={{...defaultStyle, ...transitionStyles[animState]}}>\n            <Grid container>\n                <ProjectHeader pageTitle={project ? project.name : null} animState={animState} />\n                {this.renderLoading()}\n\n                {project &&\n                                \n                    <Card className={this.props.classes.card}>\n                        <CardMedia\n                        className={this.props.classes.media}\n                        image={project.image || \"https://picsum.photos/1200/800\"}\n                        title={project.name + \"'s image\"}\n                        />\n                        <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"Recipe\" className={this.props.classes.avatar}>\n                            R\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"Settings\">\n                                <MoreVertIcon />\n                            </IconButton>\n                        }\n                        title={project.name}\n                        subheader={project.createdAt}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {project.description}\n                            </Typography>\n                        </CardContent>\n                        <CardActions /*disableSpacing*/>\n                            <IconButton aria-label=\"Add to favorites\">\n                                <FavoriteIcon />\n                            </IconButton>\n                            <IconButton aria-label=\"Share\">\n                                <ShareIcon />\n                            </IconButton>\n                            <IconButton\n                                className={clsx(this.props.classes.expand, {\n                                [this.props.classes.expandOpen]: expanded,\n                                })}\n                                onClick={() => this.handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"Show more\"\n                            >\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        </CardActions>\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                            <CardContent>\n                                <Typography paragraph>\n                                    {project.extendedDesciption}\n                                </Typography>\n                            </CardContent>\n                        </Collapse>\n                    </Card>\n                }\n            </Grid>\n        </div>\n    \n    //     </CSSTransition>\n    // </TransitionGroup>\n\n\n            // // <Zoom in={this.state.zoom} style={{ transitionDelay: this.state.zoom ? '500ms' : '0ms' }}>\n            //     <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            //     {/* <ProjectHeader pageTitle={this.state.pageTitle}/> */}\n            //     {/* {this.renderLoading()} */}\n    \n            //     {/* {this.renderProject()} */}\n                \n            //         <Paper elevation={4} className={this.props.classes.paper}>\n            //             ...LoL...\n            //         </Paper>\n            //     </Grid>\n            // // </Zoom>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        sections: state.sections,\n        selectedProject: state.selectedProject,\n    }\n}\n\nconst connectedProject = connect(mapStateToProps)(Project)\nconst ProjectWithStyles = withStyles(styles)(connectedProject)\nexport default withRouter(ProjectWithStyles)","import runtimeEnv from '@mars/heroku-js-runtime-env'\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withStyles} from '@material-ui/core'\nimport {withRouter} from 'react-router-dom'\n\nimport Slide from '@material-ui/core/Slide'\nimport Fade from '@material-ui/core/Fade'\nimport Grid from '@material-ui/core/Grid'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport clsx from 'clsx'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Typography from '@material-ui/core/Typography'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport InfoIcon from '@material-ui/icons/Info'\n// import Divider from '@material-ui/core/Divider'\n// import {withRouter} from 'react-router-dom'\n\nimport MainHeader from '../components/MainHeaders/MainHeader'\n// import MainHeaderProminent from '../components/MainHeader/MainHeaderProminent'\nimport Project from './Project'\n\nimport {sessionActions, sectionsActions, projectsActions} from '../actions'\n\n// import {projectsApi} from '../api'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        // flexGrow: 1,\n        // height: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    w100: {\n        width: '100%',\n    },\n    menuButton: {\n        marginRight: 20,\n    },\n    bandeau: {\n        // minHeight: 300,\n        // height: '100%',\n        marginTop: 10,\n        marginLeft: 10,\n        textAlign: 'center',\n    },\n    centeredCircularProgress: {\n        // color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -20,\n        marginLeft: -20,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n    gridList: {\n        // width: '100vw',\n        // height: '90vh',\n    },\n    card: {\n    //   maxWidth: 345,\n        height: '100%',\n    },\n    media: {\n      height: 140,\n    //     // margin: 10,\n    //     [theme.breakpoints.down('sm')]: {\n    //         height: 200,\n    //     },\n    //     [theme.breakpoints.up('md')]: {\n    //         height: 250,\n    //     },\n    //     [theme.breakpoints.up('lg')]: {\n    //         height: 300,\n    //     },\n    },\n})\n\nclass Portfolio extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            pageTitle:\"Portfolio\",\n            fade: true,\n\n            selectedProjectId: null,\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(sessionActions.setPageTitle(this.state.pageTitle))\n        document.title = `${runtimeEnv().REACT_APP_APP_NAME} - ${this.state.pageTitle}`\n\n        // this.getSections()\n\n        this.props.dispatch(projectsActions.getAll(() => this.getAllCallback()))\n    }\n\n    componentWillUnmount() {\n        this.setState({fade: false})\n    }\n                                \n\n    renderLoading() {\n        if(\n            this.props.sections.isLoading ||\n            // this.props.selectedProject.isLoading ||\n            this.props.projects.isLoading\n        ) {\n            return <LinearProgress className={this.props.classes.w100} />\n        }\n    }\n\n    getSections() {\n        this.props.dispatch(sectionsActions.getOne('avatar'))\n    }\n\n    sortedProjects() {\n        return this.props.projects.projects.sort((a, b) => {\n            a = new Date(a.createdAt)\n            b = new Date(b.createdAt)\n            // return a>b ? -1 : a<b ? 1 : 0\n            return b - a\n        })\n    }\n\n    getProject(id, slug, e) {\n        this.setState({selectedProjectId: id})\n\n        const target = e.target\n        const { top, right, bottom, left, width, height } = target.getBoundingClientRect()\n        const from = { top, right, bottom, left, width, height }\n\n        this.props.dispatch(projectsActions.getOne(slug, () => this.getProjectCallback(slug, from), from))\n    }\n\n    getAllCallback() {\n\n    }\n\n    getProjectCallback(slug, from) {\n        // console.log('from : ', from)\n        this.props.history.push({\n            pathname: `/portfolio/${slug}`,\n            state: {\n                to: 'modal',\n                from: from,\n            },\n        })\n    }\n\n    renderBandeau() {\n\n            return (\n                <Grid item xs={12} className={this.props.classes.bandeau}>\n                    Ceci est mon portfolio.<br/>\n                    J'aime mon portfolio!\n                </Grid>\n                // <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.bandeau}>\n                //     <Paper /*className={classes.root}*/ /*elevation={1}*/>\n                //         <Typography variant=\"h5\" component=\"h3\">\n                //             Portfolio\n                //         </Typography>\n                //         <Typography component=\"p\">\n                //             {this.props.sections.sections.portfolio_Intro.textContent}\n                //         </Typography>\n                //     </Paper>\n                // </Grid>\n            )\n    }\n\n    renderProjects() {\n        if(this.props.projects.error) { return JSON.stringify(this.props.projects.error) }\n\n        if(this.props.projects.isLoading) {      \n            return null      \n            return (\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                    <CircularProgress />\n                </Grid>\n            )\n        } else if(this.props.projects.projects) {\n\n            return (\n                // <GridList cellHeight={240} className={this.props.classes.gridList} style={{margin: 0}} cols={4}>\n                <Grid container /*spacing={3}*/ className={this.props.classes.gridList}>\n                    {this.sortedProjects().map((project, project_index) => {\n\n                        let selected = this.state.selectedProjectId == project._id && this.props.selectedProject.isLoading ? true : false\n\n                        return (\n                            // // <GridListTile ref={this.state.projectsRefs[project.slug]} key={project_index} cols={project.cols || 1}>\n                            // <GridListTile key={project_index} className={this.props.classes.gridList}\n                            // //  button\n                            //  onClick={(e) => this.getProject(project._id, project.slug, e)} \n                            // //  disabled={selected} selected={selected}\n                            // // cols={project.cols || 1}\n                            // // rows={project.cols || 1}\n                            // >\n                            //     <img src={project.image || \"https://picsum.photos/1200/800\"} alt={project.name} title={project.name + '\\'s image'} />\n                            //     <GridListTileBar\n                            //     title={project.name}\n                            //     subtitle={<span>{project.description}</span>}\n                            //     actionIcon={\n                            //         <IconButton className={this.props.classes.icon}>\n                            //             <InfoIcon />\n                            //         </IconButton>\n                            //     }\n                            //     />\n\n                            //     {/* {selected ? <CircularProgress className={this.props.classes.centeredCircularProgress}/> : null} */}\n                            // </GridListTile>\n\n                            <Grid key={project_index} item xs={12} sm={6} md={4} lg={3}>\n                                <Card className={this.props.classes.card}>\n                                    <CardActionArea onClick={(e) => this.getProject(project._id, project.slug, e)}>\n                                        <CardMedia\n                                        className={this.props.classes.media}\n                                        image={project.image || \"https://picsum.photos/1200/800\"}\n                                        title={project.name}\n                                        />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {project.name}\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {project.description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    {/* <CardActions>\n                                        <Button size=\"small\" color=\"primary\">\n                                            Share\n                                        </Button>\n                                        <Button size=\"small\" color=\"primary\">\n                                            Learn More\n                                        </Button>\n                                    </CardActions> */}\n                                </Card>\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n                // </GridList>\n            )\n        } else {\n            return 'WTF'\n        }\n    }\n\n    render() {\n\n        return (\n            <Grid container>\n                {this.renderLoading()}\n                \n                {/* {this.renderBandeau()} */}\n                {this.renderProjects()}\n            </Grid>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        sections: state.sections,\n        projects: state.model.projects,\n        selectedProject: state.selectedProject,\n    }\n}\n\nconst connectedPortfolio = connect(mapStateToProps)(Portfolio)\nconst PortfolioWithStyle = withStyles(styles)(connectedPortfolio)\nexport default withRouter(PortfolioWithStyle)","import runtimeEnv from '@mars/heroku-js-runtime-env'\nimport React, {Component} from 'react'\nimport {withStyles} from '@material-ui/core'\n\nimport MainHeader from '../components/MainHeaders/MainHeader'\n// import MainHeaderProminent from '../components/MainHeaders/MainHeaderProminent'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: 20,\n    },\n}\n\nclass _404 extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            \"pageTitle\":\"404\",\n        }\n    }\n    \n\tcomponentDidMount() {\n        document.title = `${runtimeEnv().REACT_APP_APP_NAME} - ${this.state.pageTitle}`\n\t}\n\n    render() {\n\n        return (\n            <div>\n                <MainHeader pageTitle={this.state.pageTitle}/>\n                <div>{this.state.pageTitle}</div>\n                {this.props.match && <div>match : {JSON.stringify(this.props.match)}</div>}\n\n\n                \n                <div>match.params : {JSON.stringify(this.props.match.params)}</div>\n                <div>pathname : {this.props.pathname}</div>\n                {/* <div>History.location.pathname : {this.props.history.location.pathname}</div> */}\n                <div>History.location : {JSON.stringify(this.props.history.location)}</div>\n                <div>History : {JSON.stringify(this.props.history)}</div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(_404)","import {Component} from 'react'\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\"\nimport {spring, AnimatedSwitch} from 'react-router-transition'\nimport {Transition} from 'react-transition-group';\n// import {connect} from 'react-redux'\n\nimport React from \"react\"\n\n// import MainHeader from './components/MainHeader/MainHeader'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport MainHeader from './components/MainHeaders/MainHeader'\n\nimport Home from './containers/Home'\nimport Portfolio from './containers/Portfolio'\nimport Project from './containers/Project'\nimport _404 from './containers/_404'\n\nimport {createBrowserHistory} from 'history'\nconst history = createBrowserHistory()\n\n\n\n// we need to map the `scale` prop we define below\n// to the transform style property\nfunction mapStyles(styles) {\n    return {\n        opacity: styles.opacity,\n        transform: `scale(${styles.scale})`,\n    };\n}\n\n// wrap the `spring` helper to use a bouncy config\nfunction bounce(val) {\n    return spring(val, {\n        stiffness: 330,\n        damping: 22,\n    });\n}\n\nclass Router extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.previousView = this.props.location\n    }\n\n    render() {\n        \n        return (\n            <BrowserRouter history={history}>\n                <MainHeader pageTitle={this.state.pageTitle}/>\n                <AnimatedSwitch\n                    atEnter={{\n                        opacity: 0,\n                        scale: 1.2,\n                    }}\n                    atLeave={{\n                        opacity: bounce(0),\n                        scale: bounce(0.8),\n                    }}\n                    atActive={{\n                        opacity: bounce(1),\n                        scale: bounce(1),\n                    }}\n                    className=\"route-wrapper\"\n                    mapStyles={mapStyles}\n                >\n                {/* <Switch> */}\n                    {/* <Route exact path=\"/\" component={Home} /> */}\n                    {/* <Route exact path=\"/\" render={({match}) => ( */}\n                    <Route exact path=\"/\" render={() => (\n                        <Home />\n                    )} />\n                    <Route path=\"/portfolio\" render={() => (\n                        <Portfolio />\n                    )} />\n                    {/* <Route exact path=\"/portfolio/:slug\" render={() => (\n                        <Project match={match}/>\n                    )} /> */}\n\n                    <Route render={({match, location}) => (\n                        // <Redirect to=\"/404\"/>\n                        <_404 match={match} location={location} history/>\n\n                        // loggedIn ? (\n                        //     <Redirect to=\"/dashboard\"/>\n                        // ) : (\n                        //     <PublicHomePage/>\n                        // )\n                    )} />\n                {/* </Switch> */}\n                </AnimatedSwitch>\n                    \n                {/* Switch for modals and/or routes taking a state as parameter */}\n                {/* <div style={{...position, border: '2px red solid'}}> */}\n                <Switch>\n                    <Route exact path=\"/portfolio/:slug\" render={({match, location}) => {\n                        // const modal = location.state && location.state.to === 'modal'\n\n                        return (\n                            <Project match={match} location={location} />\n                        )\n                    }} />\n                </Switch>\n                {/* </div> */}\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n// import {composeWithDevTools} from 'redux-devtools-extension/logOnlyInProduction';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport reducers from './reducers'\n\nimport Router from  './Router'\n\nimport './index.css'\n// import App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport '../node_modules/materialize-css/dist/css/materialize.min.css'\nimport './index.css'\n\nconst store = createStore(\n        reducers,\n        // undefined,\n        composeWithDevTools(applyMiddleware(thunk))\n    )\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router />\n    </Provider>\n    , document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}